function extractValue(arr, key){
		return arr.reduce(function(accumulator, nextValue){
			accumulator.push(nextValue[key]);
			return  accumulator;
		}, []);
}

var arr = [{name: 'Elie'}, {name: 'Tim'}, {name: 'Matt'}, {name: 'Colt'}];
extractValue(arr,'name'); // ['Elie', 'Tim', 'Matt', 'Colt']


=============================================================================
function vowelCount(str){
	var vowels = 'aeiou';
   return str.toLowerCase().split('').reduce(function(accumulator, nextValue){
		if(vowels.indexOf(nextValue)!== -1){
			if(nextValue in accumulator){
				accumulator[nextValue]++;
			}
			else{
				accumulator[nextValue] = 1;
			}
		}
		return accumulator;
   },{});
}


 vowelCount('Elie') ;// {e:2,i:1};
 
 =============================================================================
function addKeyAndValue(arr, key, value){
	return arr.reduce(function(accumulator, nextValue, idx){
		accumulator[idx][key]  = value	
		return accumulator;
	}, arr);
}

 var arr = [{name: 'Elie'}, {name: 'Tim'}, {name: 'Matt'}, {name: 'Colt'}];
    
    addKeyAndValue(arr, 'title', 'Instructor') // 
      [
        {title: 'Instructor', name: 'Elie'}, 
        {title: 'Instructor', name: 'Tim'}, 
        {title: 'Instructor', name: 'Matt'}, 
        {title: 'Instructor', name: 'Colt'}
       ]
*/

===============================================================================
function partition(arr, callback){
	return arr.reduce(function(accumulator, nextValue){
		if(callback(nextValue)){
			accumulator[0].push(nextValue);
		} else {
			accumulator[1].push(nextValue);
		}
		return accumulator;
	}, [[],[]]);
}

 function isEven(val){
        return val % 2 === 0;
    }
    
    var arr = [1,2,3,4,5,6,7,8];
    
    partition(arr, isEven) // [[2,4,6,8], [1,3,5,7]];
    
    function isLongerThanThreeCharacters(val){
        return val.length > 3;
    }
    
    var names = ['Elie', 'Colt', 'Tim', 'Matt'];
    
    partition(names, isLongerThanThreeCharacters) // [['Elie', 'Colt', 'Matt'], ['Tim']]