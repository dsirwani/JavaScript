function sumEvenArguments(){
	var arrOfNums = [].slice.call(arguments);
	return arrOfNums.reduce(function(acc, nextValue){
		if(nextValue % 2 === 0){
			acc += nextValue;
		}
		return acc;
	}, 0);
}

sumEvenArguments(1,2,3,4) // 6
    sumEvenArguments(1,2,6) // 8
	
=====================================================================================
function add(a,b){
        return a+b
    }

function invokeMax(fn, num){
    var counter = 0;
	return function(){
		
		if(counter >= num){
			return "Maxed Out!";
		}
		counter++;
		return fn.apply(this, arguments);
	}
}
var addOnlyThreeTimes = invokeMax(add,3);
    addOnlyThreeTimes(1,2) // 3
    addOnlyThreeTimes(2,2) // 4
    addOnlyThreeTimes(1,2) // 3
    addOnlyThreeTimes(1,2) // "Maxed Out!"

=======================================================================================
function once(fn, thisArg){
	var hasBeenCalled = false;
    return function(){
		if(!hasBeenCalled){
			hasBeenCalled = true;
			return	fn.apply(thisArg, arguments)
		}
	}
}

 function add(a,b){
        return a+b
    }

    var addOnce = once(add, this);
    addOnce(2,2) // 4
    addOnce(2,2) // undefined
    addOnce(2,2) // undefined
    
    function doMath(a,b,c){
        return this.firstName + " adds " + (a+b+c)
    }
    
    var instructor = {firstName: "Elie"}
    var doMathOnce = once(doMath, instructor);
    doMathOnce(1,2,3) // "Elie adds 6"
    doMathOnce(1,2,3) // undefined
   
==========================================================================================
function bind(fn, thisArg){
	var outerArgs = [].slice.call(arguments, 2);
		return function(){
			var innerArgs = [].slice.call(arguments);	
			var args = outerArgs.concat(innerArgs);
			return fn.apply(thisArg, args);
		}
}

 function firstNameFavoriteColor(favoriteColor){
        return this.firstName + "'s favorite color is " + favoriteColor
    }
    
    var person = {
        firstName: 'Elie'
    }
    
    var bindFn = bind(firstNameFavoriteColor, person);
    bindFn('green') // "Elie's favorite color is green"
	
	
	 var bindFn2 = bind(firstNameFavoriteColor, person, 'blue');
    bindFn2('green') // "Elie's favorite color is blue" 
    
    function addFourNumbers(a,b,c,d){
        return a+b+c+d;
    }

    bind(addFourNumbers,this,1)(2,3,4) // 10
    bind(addFourNumbers,this,1,2)(3,4) // 10
    bind(addFourNumbers,this,1,2,3)(4) // 10
    bind(addFourNumbers,this,1,2,3,4)() // 10
    bind(addFourNumbers,this)(1,2,3,4) // 10
    bind(addFourNumbers,this)(1,2,3,4,5,6,7,8,9,10) // 10
	
=============================================================================================
function flip(fn, thisArg){
	var outerArgs = [].slice.call(arguments, 2);
		return function(){
			var innerArgs = [].slice.call(arguments);	
			var args = outerArgs.concat(innerArgs).slice(0, fn.length);
			return fn.apply(thisArg, args.reverse());
		}
}

function personSubtract(a,b,c){
        return this.firstName + " subtracts " + (a-b-c);
    }
    
    var person = {
        firstName: 'Elie'
    }
    
    var flipFn = flip(personSubtract, person);
    flipFn(3,2,1) // "Elie subtracts -4"
    
    var flipFn2 = flip(personSubtract, person, 5,6);
    flipFn2(7,8). // "Elie subtracts -4"
    
    function subtractFourNumbers(a,b,c,d){
        return a-b-c-d;
    }

    flip(subtractFourNumbers,this,1)(2,3,4) // -2
    flip(subtractFourNumbers,this,1,2)(3,4) // -2
    flip(subtractFourNumbers,this,1,2,3)(4) // -2
    flip(subtractFourNumbers,this,1,2,3,4)() // -2
    flip(subtractFourNumbers,this)(1,2,3,4) // -2
    flip(subtractFourNumbers,this,1,2,3)(4,5,6,7) // -2
    flip(subtractFourNumbers,this)(1,2,3,4,5,6,7,8,9,10) // -2
    flip(subtractFourNumbers,this,11,12,13,14,15)(1,2,3,4,5,6,7,8,9,10) // -22
